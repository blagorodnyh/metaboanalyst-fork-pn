// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>
#include <R.h>
#include <Rinternals.h>
#include <stdlib.h> // for NULL
#include <R_ext/Rdynload.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// melt_dataframe
List melt_dataframe(const DataFrame& data, const IntegerVector& id_ind, const IntegerVector& measure_ind, String variable_name, String value_name, SEXP measure_attributes, bool factorsAsStrings, bool valueAsFactor);
RcppExport SEXP _MetaboAnalystR_melt_dataframe(SEXP dataSEXP, SEXP id_indSEXP, SEXP measure_indSEXP, SEXP variable_nameSEXP, SEXP value_nameSEXP, SEXP measure_attributesSEXP, SEXP factorsAsStringsSEXP, SEXP valueAsFactorSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const DataFrame& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const IntegerVector& >::type id_ind(id_indSEXP);
    Rcpp::traits::input_parameter< const IntegerVector& >::type measure_ind(measure_indSEXP);
    Rcpp::traits::input_parameter< String >::type variable_name(variable_nameSEXP);
    Rcpp::traits::input_parameter< String >::type value_name(value_nameSEXP);
    Rcpp::traits::input_parameter< SEXP >::type measure_attributes(measure_attributesSEXP);
    Rcpp::traits::input_parameter< bool >::type factorsAsStrings(factorsAsStringsSEXP);
    Rcpp::traits::input_parameter< bool >::type valueAsFactor(valueAsFactorSEXP);
    rcpp_result_gen = Rcpp::wrap(melt_dataframe(data, id_ind, measure_ind, variable_name, value_name, measure_attributes, factorsAsStrings, valueAsFactor));
    return rcpp_result_gen;
END_RCPP
}

/* .C calls */
RcppExport void C_imodwt(void *, void *, void *, void *, void *, void *, void *, void *);
RcppExport void C_modwt(void *, void *, void *, void *, void *, void *, void *, void *);
RcppExport void continuousPtsAboveThreshold(void *, void *, void *, void *, void *, void *);
RcppExport void continuousPtsAboveThresholdIdx(void *, void *, void *, void *, void *, void *);
RcppExport void DescendMin(void *, void *, void *, void *, void *);
RcppExport void FindEqualGreaterM(void *, void *, void *, void *, void *);
RcppExport void RectUnique(void *, void *, void *, void *, void *, void *, void *);
RcppExport void WhichColMax(void *, void *, void *, void *);
RcppExport void DescendZero(void *, void *, void *, void *, void *);
RcppExport void ColMax(void *, void *, void *, void *);
RcppExport void nncgc(void *, void *, void *, void *, void *, void *, void *, void *, void *, void *);

/* .Call calls */
RcppExport SEXP do_decorana(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP findmzROI(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP getMZ(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP getEIC(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP binYonX(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP binYonX_multi(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP impute_with_linear_interpolation(SEXP, SEXP);
RcppExport SEXP impute_with_linear_interpolation_base(SEXP, SEXP, SEXP);
RcppExport SEXP breaks_on_nBins(SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP fmatch(SEXP, SEXP, SEXP, SEXP, SEXP);

static const R_CMethodDef CEntries[] = {
  {"C_imodwt",         (DL_FUNC) &C_imodwt,          8},
  {"C_modwt",          (DL_FUNC) &C_modwt,           8},
  {"continuousPtsAboveThreshold",          (DL_FUNC) &continuousPtsAboveThreshold,           6},
  {"continuousPtsAboveThresholdIdx",          (DL_FUNC) &continuousPtsAboveThresholdIdx,           6},
  {"DescendMin",          (DL_FUNC) &DescendMin,           5},
  {"FindEqualGreaterM",          (DL_FUNC) &FindEqualGreaterM,           5},
  {"RectUnique",          (DL_FUNC) &RectUnique,           7},
  {"WhichColMax",          (DL_FUNC) &WhichColMax,           4},
  {"DescendZero",          (DL_FUNC) &DescendZero,           5},
  {"ColMax",          (DL_FUNC) &ColMax,           4},
  {"nncgc",          (DL_FUNC) &nncgc,           10},
  {NULL, NULL, 0}
};

static const R_CallMethodDef CallEntries[] = {
  {"do_decorana",  (DL_FUNC) &do_decorana,  7},
  {"findmzROI",  (DL_FUNC) &findmzROI,  10},
  {"getMZ",  (DL_FUNC) &getMZ,  6},
  {"getEIC",  (DL_FUNC) &getEIC,  6},
  {"binYonX",  (DL_FUNC) &binYonX,  14},
  {"binYonX_multi",  (DL_FUNC) &binYonX_multi,  14},
  {"impute_with_linear_interpolation",  (DL_FUNC) &impute_with_linear_interpolation,  2},
  {"impute_with_linear_interpolation_base",  (DL_FUNC) &impute_with_linear_interpolation_base,  3},
  {"breaks_on_nBins",  (DL_FUNC) &breaks_on_nBins,  4},
  {"fmatch",  (DL_FUNC) &fmatch,  5},
  {"_MetaboAnalystR_melt_dataframe", (DL_FUNC) &_MetaboAnalystR_melt_dataframe, 8},
  {NULL, NULL, 0}
};

RcppExport void R_init_MetaboAnalystR(DllInfo *dll) {
  R_registerRoutines(dll, CEntries, CallEntries, NULL, NULL);
  R_useDynamicSymbols(dll, FALSE);
}